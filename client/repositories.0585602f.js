import{c as e,d as t,b as r,u as s,m as i,g as o,e as n,s as a,k as l,h as c,i as d,j as u,n as p,D as m,E as h,a as f,t as g,F as b,G as v,H as R,p as y}from"./chunk.6618d831.js";import{a as $,b as A}from"./chunk.113758f0.js";function D(e,t,r){const s=Object.create(e);return s.item=t[r],s}function w(e){for(var t,r=e.repositories,o=[],n=0;n<r.length;n+=1)o[n]=I(D(e,r,n));return{c(){for(var e=0;e<o.length;e+=1)o[e].c();t=s()},l(e){for(var r=0;r<o.length;r+=1)o[r].l(e);t=s()},m(e,r){for(var s=0;s<o.length;s+=1)o[s].m(e,r);i(e,t,r)},p(e,s){if(e.getPositionClass||e.repositories||e.Date||e.getReadableDate||e.showYear){r=s.repositories;for(var i=0;i<r.length;i+=1){const n=D(s,r,i);o[i]?(o[i].p(e,n),o[i].i(1)):(o[i]=I(n),o[i].c(),o[i].i(1),o[i].m(t.parentNode,t))}for(;i<o.length;i+=1)o[i].d(1);o.length=r.length}},i(e){for(var t=0;t<r.length;t+=1)o[t].i()},o:f,d(e){b(o,e),e&&u(t)}}}function N(e){var t,r,s;return{c(){t=n("div"),this.h()},l(e){t=c(e,"DIV",{class:!0,"data-content":!0},!1),d(t).forEach(u),this.h()},h(){t.className="containerYear svelte-1fm3hib",t.dataset.content=r=new e.Date(e.item.contribution.createdAt||e.item.createdat).getFullYear()},m(e,r){i(e,t,r)},p(e,s){e.repositories&&r!==(r=new s.Date(s.item.contribution.createdAt||s.item.createdat).getFullYear())&&(t.dataset.content=r)},i(e){s||m((()=>{(s=h(t,$,{y:-300,duration:k})).start()}))},o:f,d(e){e&&u(t)}}}function E(e){var t,r,s,o=e.item.description;return{c(){t=n("p"),r=a("created project: "),s=a(o),this.h()},l(e){t=c(e,"P",{class:!0},!1);var i=d(t);r=l(i,"created project: "),s=l(i,o),i.forEach(u),this.h()},h(){t.className="svelte-1fm3hib"},m(e,o){i(e,t,o),p(t,r),p(t,s)},p(e,t){e.repositories&&o!==(o=t.item.description)&&g(s,o)},d(e){e&&u(t)}}}function q(e){var t,r,s,o,m,h,f,b=e.item.contribution.type,v=e.item.contribution.title;return{c(){t=n("p"),r=a("contributed with "),s=a(b),o=a(": "),m=n("a"),h=a(v),this.h()},l(e){t=c(e,"P",{class:!0},!1);var i=d(t);r=l(i,"contributed with "),s=l(i,b),o=l(i,": "),m=c(i,"A",{rel:!0,href:!0,target:!0,class:!0},!1);var n=d(m);h=l(n,v),n.forEach(u),i.forEach(u),this.h()},h(){m.rel="noopener, preconnect",m.href=f=e.item.contribution.url,m.target="_blank",m.className="svelte-1fm3hib",t.className="svelte-1fm3hib"},m(e,n){i(e,t,n),p(t,r),p(t,s),p(t,o),p(t,m),p(m,h)},p(e,t){e.repositories&&b!==(b=t.item.contribution.type)&&g(s,b),e.repositories&&v!==(v=t.item.contribution.title)&&g(h,v),e.repositories&&f!==(f=t.item.contribution.url)&&(m.href=f)},d(e){e&&u(t)}}}function C(e){var t,r,s;return{c(){t=n("a"),r=a("demo"),this.h()},l(e){t=c(e,"A",{rel:!0,href:!0,target:!0,class:!0},!1);var s=d(t);r=l(s,"demo"),s.forEach(u),this.h()},h(){t.rel="noopener, preconnect",t.href=s=e.item.demourl,t.target="_blank",t.className="svelte-1fm3hib"},m(e,s){i(e,t,s),p(t,r)},p(e,r){e.repositories&&s!==(s=r.item.demourl)&&(t.href=s)},d(e){e&&u(t)}}}function I(e){var t,r,s,b,v,R,y,A,D,w,I,j,k,x,S,P,Y,T,F,O,V,W,U,B=e.item.nameWithOwner,G=e.item.topics.concat(e.item.languages).join(", "),H=e.getReadableDate(e.item.contribution.createdAt||e.item.createdat),L=e.showYear(e.item.contribution.createdAt||e.item.createdat)&&N(e);function _(e){return e.item.contribution.type?q:E}var z=_(e),J=z(e),Z=""!==e.item.demourl&&C(e);return{c(){L&&L.c(),t=o(),r=n("div"),s=n("div"),b=n("h3"),v=n("a"),R=a(B),A=o(),J.c(),D=o(),w=n("span"),I=a(G),j=o(),k=n("div"),x=n("div"),Z&&Z.c(),S=o(),P=n("div"),Y=n("i"),T=a("initiated @ "),F=a(H),V=o(),this.h()},l(e){L&&L.l(e),t=l(e,"\r\n          "),r=c(e,"DIV",{class:!0,"data-content":!0},!1);var i=d(r);s=c(i,"DIV",{class:!0},!1);var o=d(s);b=c(o,"H3",{class:!0},!1);var n=d(b);v=c(n,"A",{rel:!0,href:!0,target:!0,class:!0},!1);var a=d(v);R=l(a,B),a.forEach(u),n.forEach(u),A=l(o,"\r\n              "),J.l(o),D=l(o,"  \r\n              "),w=c(o,"SPAN",{class:!0},!1);var p=d(w);I=l(p,G),p.forEach(u),j=l(o,"\r\n              "),k=c(o,"DIV",{class:!0},!1);var m=d(k);x=c(m,"DIV",{class:!0},!1);var h=d(x);Z&&Z.l(h),h.forEach(u),S=l(m,"\r\n                "),P=c(m,"DIV",{class:!0},!1);var f=d(P);Y=c(f,"I",{class:!0},!1);var g=d(Y);T=l(g,"initiated @ "),F=l(g,H),g.forEach(u),f.forEach(u),m.forEach(u),o.forEach(u),V=l(i,"\r\n          "),i.forEach(u),this.h()},h(){v.rel="noopener, preconnect",v.href=y=e.item.url,v.target="_blank",v.className="svelte-1fm3hib",b.className="svelte-1fm3hib",w.className="topics svelte-1fm3hib",x.className="svelte-1fm3hib",Y.className="svelte-1fm3hib",P.className="svelte-1fm3hib",k.className="contentFooter svelte-1fm3hib",s.className="content  svelte-1fm3hib",r.className=W="container "+e.getPositionClass(e.item.index)+" svelte-1fm3hib",r.dataset.content=U=new e.Date(e.item.contribution.createdAt||e.item.createdat).toLocaleString("en-us",{month:"short"})},m(e,o){L&&L.m(e,o),i(e,t,o),i(e,r,o),p(r,s),p(s,b),p(b,v),p(v,R),p(s,A),J.m(s,null),p(s,D),p(s,w),p(w,I),p(s,j),p(s,k),p(k,x),Z&&Z.m(x,null),p(k,S),p(k,P),p(P,Y),p(Y,T),p(Y,F),p(r,V)},p(e,i){i.showYear(i.item.contribution.createdAt||i.item.createdat)?L?(L.p(e,i),L.i(1)):((L=N(i)).c(),L.i(1),L.m(t.parentNode,t)):L&&(L.d(1),L=null),e.repositories&&B!==(B=i.item.nameWithOwner)&&g(R,B),e.repositories&&y!==(y=i.item.url)&&(v.href=y),z===(z=_(i))&&J?J.p(e,i):(J.d(1),(J=z(i))&&(J.c(),J.m(s,D))),e.repositories&&G!==(G=i.item.topics.concat(i.item.languages).join(", "))&&g(I,G),""!==i.item.demourl?Z?Z.p(e,i):((Z=C(i)).c(),Z.m(x,null)):Z&&(Z.d(1),Z=null),e.repositories&&H!==(H=i.getReadableDate(i.item.contribution.createdAt||i.item.createdat))&&g(F,H),e.repositories&&W!==(W="container "+i.getPositionClass(i.item.index)+" svelte-1fm3hib")&&(r.className=W),e.repositories&&U!==(U=new i.Date(i.item.contribution.createdAt||i.item.createdat).toLocaleString("en-us",{month:"short"}))&&(r.dataset.content=U)},i(t){L&&L.i(),O||m((()=>{(O=h(s,$,e.getItemTransition(e.item.index))).start()}))},o:f,d(e){L&&L.d(e),e&&(u(t),u(r)),J.d(),Z&&Z.d()}}}function j(e){var t,r,s,f,g,b,R,y,D,N=e.repositories.length>0&&w(e);return{c(){t=n("h2"),r=a("[...github repositories]"),g=o(),b=n("div"),R=n("div"),N&&N.c(),this.h()},l(e){t=c(e,"H2",{class:!0},!1);var s=d(t);r=l(s,"[...github repositories]"),s.forEach(u),g=l(e,"\r\n  "),b=c(e,"DIV",{class:!0},!1);var i=d(b);R=c(i,"DIV",{class:!0},!1);var o=d(R);N&&N.l(o),o.forEach(u),i.forEach(u),this.h()},h(){t.className="svelte-1fm3hib",R.className="timeline svelte-1fm3hib",b.className="main svelte-1fm3hib"},m(e,s){i(e,t,s),p(t,r),i(e,g,s),i(e,b,s),p(b,R),N&&N.m(R,null),D=!0},p(e,t){t.repositories.length>0?N?(N.p(e,t),N.i(1)):((N=w(t)).c(),N.i(1),N.m(R,null)):N&&(N.d(1),N=null)},i(e){D||(m((()=>{f&&f.end(1),s||(s=h(t,$,{y:-100,duration:2e3})),s.start()})),N&&N.i(),y&&y.end(1),D=!0)},o(e){s&&s.invalidate(),e&&(f=v(t,A,{})),e&&(y=v(b,A,{})),D=!1},d(e){e&&(u(t),f&&f.end(),u(g),u(b)),N&&N.d(),e&&y&&y.end()}}}const k=2e3;function x(e,t,r){let{repositories:s={},preloadRepositories:i={}}=t,o=null;R((()=>{r("repositories",s=i)}));const n=e=>e%2==0?"left":"right";return e.$set=e=>{"repositories"in e&&r("repositories",s=e.repositories),"preloadRepositories"in e&&r("preloadRepositories",i=e.preloadRepositories)},{repositories:s,preloadRepositories:i,getReadableDate:e=>{const t=new Date(e);return`${t.getDate()} ${t.toLocaleString("en-us",{month:"short"})} ${t.getFullYear()}`},getPositionClass:n,getItemTransition:e=>"left"===n(e)?{x:-100,duration:k}:{x:100,duration:k},showYear:e=>{const t=new Date(e).getFullYear();return(null===o||o!==t)&&(r("repositoryYear",o=t),!0)},Date:Date}}class S extends e{constructor(e){super(),t(this,e,x,j,r,["repositories","preloadRepositories"])}}function P(e){var t,r,s=new S({props:{preloadRepositories:e.preloadRepositories}});return{c(){t=o(),s.$$.fragment.c(),this.h()},l(e){t=l(e,"\r\n"),s.$$.fragment.l(e),this.h()},h(){document.title="Nilesh - Repositories"},m(e,o){i(e,t,o),y(s,e,o),r=!0},p(e,t){var r={};e.preloadRepositories&&(r.preloadRepositories=t.preloadRepositories),s.$set(r)},i(e){r||(s.$$.fragment.i(e),r=!0)},o(e){s.$$.fragment.o(e),r=!1},d(e){e&&u(t),s.$destroy(e)}}}async function Y({params:e,query:t}){const r=await this.fetch("https://gist.githubusercontent.com/NileshSP/19bbe3945375eb10d625a980f0da93a1/raw/cc1de90d2ffe796efd6168f31b99178a650d91db/tokens.json",{method:"GET",mode:"cors"}),s=await r.json();return this.fetch("https://api.github.com/graphql",{method:"POST",headers:{"content-type":"application/json",Authorization:`bearer ${s.githubAccessToken}`},body:JSON.stringify({query:"\n        query ($user: String!, $items: Int!, $fork: Boolean!, $fromdate: DateTime!) {\n          getRequestRepos: user(login: $user) {\n            repositories(first: $items, isFork: $fork) {\n              nodes {\n                ...repository       \n              }\n            }\n            contributionsCollection(from: $fromdate ) {\n              issueContributions( first: $items, orderBy: { direction: DESC}) {\n                nodes {\n                  issue {\n                    title\n                    url\n                    createdAt\n                    closed\n                    repository {\n                      ...repository\n                    }\n                  }\n                }\n              }\n              pullRequestContributions( first: $items, excludeFirst:true, orderBy: { direction: DESC}) {\n                nodes {\n                  pullRequest {\n                    title\n                    url\n                    createdAt\n                    merged\n                    repository {\n                      ...repository\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        fragment repository on Repository {\n            id\n            name\n            nameWithOwner\n            url\n            description\n            createdAt\n            updatedAt\n            homepageUrl\n            languages(first: $items) {\n              nodes {\n                name\n              }\n            }\n            repositoryTopics(first: $items) {\n              nodes {\n                topic {\n                  name\n                }\n              }\n            }\n        }\n      ",variables:{user:"nileshsp",items:50,fork:!1,fromdate:"2019-01-01T00:00:00Z"}}),mode:"cors"}).then((e=>e.json())).then((e=>{let t=[];if(e.message)return console.error("github response",e.message),{preloadRepositories:t};if(null!=e){const r=(e,t)=>({contribution:e,id:t.id,name:t.name,nameWithOwner:t.nameWithOwner,url:t.url,description:t.description,createdat:t.createdAt,updatedat:t.updatedAt,demourl:null!==t.homepageUrl&&"null"!==t.homepageUrl.toString().trim()?t.homepageUrl:"",languages:t.languages.nodes.map((e=>e.name)),topics:t.repositoryTopics.nodes.map((e=>e.topic.name))});t=[...t,...e.data.getRequestRepos.repositories.nodes.map((e=>r({type:null,title:null,url:null,createdAt:null,state:null},e))),...e.data.getRequestRepos.contributionsCollection.issueContributions.nodes.map((e=>r({type:"issue",title:e.issue.title,url:e.issue.url,createdAt:e.issue.createdAt,state:e.issue.closed},e.issue.repository))),...e.data.getRequestRepos.contributionsCollection.pullRequestContributions.nodes.map((e=>r({type:"pull request",title:e.pullRequest.title,url:e.pullRequest.url,createdAt:e.pullRequest.createdAt,state:e.pullRequest.merged},e.pullRequest.repository)))].sort((function(e,t){const r=new Date(e.contribution.createdAt||e.createdat);return new Date(t.contribution.createdAt||t.createdat)-r})).map(((e,t)=>({...e,index:t})))}else console.log("Github API responded with irrelevant data : ",e);return{preloadRepositories:t}})).catch((e=>{console.error(`Error is : ${e}`)}))}function T(e,t,r){let{preloadRepositories:s}=t;return e.$set=e=>{"preloadRepositories"in e&&r("preloadRepositories",s=e.preloadRepositories)},{preloadRepositories:s}}export default class extends e{constructor(e){super(),t(this,e,T,P,r,["preloadRepositories"])}}export{Y as preload};
