import{J as e,a as t,b as n,c as r,d as i,e as o,f as s,g as a,h as c,z as u,q as l,k as f,i as p,x as d,o as m,l as h,m as g,n as b,r as v,K as y,L as R,s as $,y as A,M as D,N as w,O as N,P as E,u as q}from"./chunk.8d5a4ab1.js";import{a as k,b as C}from"./chunk.f4c17f44.js";import{a as O,b as j}from"./chunk.1ff4873f.js";function S(t){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{},i=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(i=i.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),i.forEach((function(n){e(t,n,r[n])}))}return t}function x(e,t,n){var r=Object.create(e);return r.item=t[n],r}function I(e){for(var t,n=e.repositories,r=[],i=0;i<n.length;i+=1)r[i]=V(x(e,n,i));return{c:function(){for(var e=0;e<r.length;e+=1)r[e].c();t=u()},l:function(e){for(var n=0;n<r.length;n+=1)r[n].l(e);t=u()},m:function(e,n){for(var i=0;i<r.length;i+=1)r[i].m(e,n);l(e,t,n)},p:function(e,i){if(e.getPositionClass||e.repositories||e.Date||e.getReadableDate||e.showYear){n=i.repositories;for(var o=0;o<n.length;o+=1){var s=x(i,n,o);r[o]?(r[o].p(e,s),r[o].i(1)):(r[o]=V(s),r[o].c(),r[o].i(1),r[o].m(t.parentNode,t))}for(;o<r.length;o+=1)r[o].d(1);r.length=n.length}},i:function(e){for(var t=0;t<n.length;t+=1)r[t].i()},o:$,d:function(e){D(r,e),e&&b(t)}}}function P(e){var t,n,r;return{c:function(){t=p("div"),this.h()},l:function(e){t=h(e,"DIV",{class:!0,"data-content":!0},!1),g(t).forEach(b),this.h()},h:function(){t.className="containerYear svelte-1fm3hib",t.dataset.content=n=new e.Date(e.item.contribution.createdAt||e.item.createdat).getFullYear()},m:function(e,n){l(e,t,n)},p:function(e,r){e.repositories&&n!==(n=new r.Date(r.item.contribution.createdAt||r.item.createdat).getFullYear())&&(t.dataset.content=n)},i:function(e){r||y((function(){(r=R(t,O,{y:-300,duration:W})).start()}))},o:$,d:function(e){e&&b(t)}}}function T(e){var t,n,r,i=e.item.description;return{c:function(){t=p("p"),n=d("created project: "),r=d(i),this.h()},l:function(e){t=h(e,"P",{class:!0},!1);var o=g(t);n=m(o,"created project: "),r=m(o,i),o.forEach(b),this.h()},h:function(){t.className="svelte-1fm3hib"},m:function(e,i){l(e,t,i),v(t,n),v(t,r)},p:function(e,t){e.repositories&&i!==(i=t.item.description)&&A(r,i)},d:function(e){e&&b(t)}}}function Y(e){var t,n,r,i,o,s,a,c=e.item.contribution.type,u=e.item.contribution.title;return{c:function(){t=p("p"),n=d("contributed with "),r=d(c),i=d(": "),o=p("a"),s=d(u),this.h()},l:function(e){t=h(e,"P",{class:!0},!1);var a=g(t);n=m(a,"contributed with "),r=m(a,c),i=m(a,": "),o=h(a,"A",{rel:!0,href:!0,target:!0,class:!0},!1);var l=g(o);s=m(l,u),l.forEach(b),a.forEach(b),this.h()},h:function(){o.rel="noopener, preconnect",o.href=a=e.item.contribution.url,o.target="_blank",o.className="svelte-1fm3hib",t.className="svelte-1fm3hib"},m:function(e,a){l(e,t,a),v(t,n),v(t,r),v(t,i),v(t,o),v(o,s)},p:function(e,t){e.repositories&&c!==(c=t.item.contribution.type)&&A(r,c),e.repositories&&u!==(u=t.item.contribution.title)&&A(s,u),e.repositories&&a!==(a=t.item.contribution.url)&&(o.href=a)},d:function(e){e&&b(t)}}}function F(e){var t,n,r;return{c:function(){t=p("a"),n=d("demo"),this.h()},l:function(e){t=h(e,"A",{rel:!0,href:!0,target:!0,class:!0},!1);var r=g(t);n=m(r,"demo"),r.forEach(b),this.h()},h:function(){t.rel="noopener, preconnect",t.href=r=e.item.demourl,t.target="_blank",t.className="svelte-1fm3hib"},m:function(e,r){l(e,t,r),v(t,n)},p:function(e,n){e.repositories&&r!==(r=n.item.demourl)&&(t.href=r)},d:function(e){e&&b(t)}}}function V(e){var t,n,r,i,o,s,a,c,u,D,w,N,E,q,k,C,j,S,x,I,V,B,W,U=e.item.nameWithOwner,L=e.item.topics.concat(e.item.languages).join(", "),_=e.getReadableDate(e.item.contribution.createdAt||e.item.createdat),z=e.showYear(e.item.contribution.createdAt||e.item.createdat)&&P(e);function G(e){return e.item.contribution.type?Y:T}var H=G(e),J=H(e),Z=""!==e.item.demourl&&F(e);return{c:function(){z&&z.c(),t=f(),n=p("div"),r=p("div"),i=p("h3"),o=p("a"),s=d(U),c=f(),J.c(),u=f(),D=p("span"),w=d(L),N=f(),E=p("div"),q=p("div"),Z&&Z.c(),k=f(),C=p("div"),j=p("i"),S=d("initiated @ "),x=d(_),V=f(),this.h()},l:function(e){z&&z.l(e),t=m(e,"\r\n          "),n=h(e,"DIV",{class:!0,"data-content":!0},!1);var a=g(n);r=h(a,"DIV",{class:!0},!1);var l=g(r);i=h(l,"H3",{class:!0},!1);var f=g(i);o=h(f,"A",{rel:!0,href:!0,target:!0,class:!0},!1);var p=g(o);s=m(p,U),p.forEach(b),f.forEach(b),c=m(l,"\r\n              "),J.l(l),u=m(l,"  \r\n              "),D=h(l,"SPAN",{class:!0},!1);var d=g(D);w=m(d,L),d.forEach(b),N=m(l,"\r\n              "),E=h(l,"DIV",{class:!0},!1);var v=g(E);q=h(v,"DIV",{class:!0},!1);var y=g(q);Z&&Z.l(y),y.forEach(b),k=m(v,"\r\n                "),C=h(v,"DIV",{class:!0},!1);var R=g(C);j=h(R,"I",{class:!0},!1);var $=g(j);S=m($,"initiated @ "),x=m($,_),$.forEach(b),R.forEach(b),v.forEach(b),l.forEach(b),V=m(a,"\r\n          "),a.forEach(b),this.h()},h:function(){o.rel="noopener, preconnect",o.href=a=e.item.url,o.target="_blank",o.className="svelte-1fm3hib",i.className="svelte-1fm3hib",D.className="topics svelte-1fm3hib",q.className="svelte-1fm3hib",j.className="svelte-1fm3hib",C.className="svelte-1fm3hib",E.className="contentFooter svelte-1fm3hib",r.className="content  svelte-1fm3hib",n.className=B="container "+e.getPositionClass(e.item.index)+" svelte-1fm3hib",n.dataset.content=W=new e.Date(e.item.contribution.createdAt||e.item.createdat).toLocaleString("en-us",{month:"short"})},m:function(e,a){z&&z.m(e,a),l(e,t,a),l(e,n,a),v(n,r),v(r,i),v(i,o),v(o,s),v(r,c),J.m(r,null),v(r,u),v(r,D),v(D,w),v(r,N),v(r,E),v(E,q),Z&&Z.m(q,null),v(E,k),v(E,C),v(C,j),v(j,S),v(j,x),v(n,V)},p:function(e,i){i.showYear(i.item.contribution.createdAt||i.item.createdat)?z?(z.p(e,i),z.i(1)):((z=P(i)).c(),z.i(1),z.m(t.parentNode,t)):z&&(z.d(1),z=null),e.repositories&&U!==(U=i.item.nameWithOwner)&&A(s,U),e.repositories&&a!==(a=i.item.url)&&(o.href=a),H===(H=G(i))&&J?J.p(e,i):(J.d(1),(J=H(i))&&(J.c(),J.m(r,u))),e.repositories&&L!==(L=i.item.topics.concat(i.item.languages).join(", "))&&A(w,L),""!==i.item.demourl?Z?Z.p(e,i):((Z=F(i)).c(),Z.m(q,null)):Z&&(Z.d(1),Z=null),e.repositories&&_!==(_=i.getReadableDate(i.item.contribution.createdAt||i.item.createdat))&&A(x,_),e.repositories&&B!==(B="container "+i.getPositionClass(i.item.index)+" svelte-1fm3hib")&&(n.className=B),e.repositories&&W!==(W=new i.Date(i.item.contribution.createdAt||i.item.createdat).toLocaleString("en-us",{month:"short"}))&&(n.dataset.content=W)},i:function(t){z&&z.i(),I||y((function(){(I=R(r,O,e.getItemTransition(e.item.index))).start()}))},o:$,d:function(e){z&&z.d(e),e&&(b(t),b(n)),J.d(),Z&&Z.d()}}}function B(e){var t,n,r,i,o,s,a,c,u,$=e.repositories.length>0&&I(e);return{c:function(){t=p("h2"),n=d("[...github repositories]"),o=f(),s=p("div"),a=p("div"),$&&$.c(),this.h()},l:function(e){t=h(e,"H2",{class:!0},!1);var r=g(t);n=m(r,"[...github repositories]"),r.forEach(b),o=m(e,"\r\n  "),s=h(e,"DIV",{class:!0},!1);var i=g(s);a=h(i,"DIV",{class:!0},!1);var c=g(a);$&&$.l(c),c.forEach(b),i.forEach(b),this.h()},h:function(){t.className="svelte-1fm3hib",a.className="timeline svelte-1fm3hib",s.className="main svelte-1fm3hib"},m:function(e,r){l(e,t,r),v(t,n),l(e,o,r),l(e,s,r),v(s,a),$&&$.m(a,null),u=!0},p:function(e,t){t.repositories.length>0?$?($.p(e,t),$.i(1)):(($=I(t)).c(),$.i(1),$.m(a,null)):$&&($.d(1),$=null)},i:function(e){u||(y((function(){i&&i.end(1),r||(r=R(t,O,{y:-100,duration:2e3})),r.start()})),$&&$.i(),c&&c.end(1),u=!0)},o:function(e){r&&r.invalidate(),e&&(i=w(t,j,{})),e&&(c=w(s,j,{})),u=!1},d:function(e){e&&(b(t),i&&i.end(),b(o),b(s)),$&&$.d(),e&&c&&c.end()}}}var W=2e3;function U(e,t,n){var r=t.repositories,i=void 0===r?{}:r,o=t.preloadRepositories,s=void 0===o?{}:o,a=null;N((function(){n("repositories",i=s)}));var c=function(e){return e%2==0?"left":"right"};return e.$set=function(e){"repositories"in e&&n("repositories",i=e.repositories),"preloadRepositories"in e&&n("preloadRepositories",s=e.preloadRepositories)},{repositories:i,preloadRepositories:s,getReadableDate:function(e){var t=new Date(e);return"".concat(t.getDate()," ").concat(t.toLocaleString("en-us",{month:"short"})," ").concat(t.getFullYear())},getPositionClass:c,getItemTransition:function(e){return"left"===c(e)?{x:-100,duration:W}:{x:100,duration:W}},showYear:function(e){var t=new Date(e).getFullYear();return(null===a||a!==t)&&(n("repositoryYear",a=t),!0)},Date:Date}}var L=function(e){function u(e){var t;return n(this,u),t=r(this,i(u).call(this)),o(s(t),e,U,B,a,["repositories","preloadRepositories"]),t}return t(u,c),u}();function _(e){var t,n,r=new L({props:{preloadRepositories:e.preloadRepositories}});return{c:function(){t=f(),r.$$.fragment.c(),this.h()},l:function(e){t=m(e,"\r\n"),r.$$.fragment.l(e),this.h()},h:function(){document.title="Nilesh - Repositories"},m:function(e,i){l(e,t,i),q(r,e,i),n=!0},p:function(e,t){var n={};e.preloadRepositories&&(n.preloadRepositories=t.preloadRepositories),r.$set(n)},i:function(e){n||(r.$$.fragment.i(e),n=!0)},o:function(e){r.$$.fragment.o(e),n=!1},d:function(e){e&&b(t),r.$destroy(e)}}}function z(e){return G.apply(this,arguments)}function G(){return(G=k(C.mark((function e(t){var n,r;return C.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t.params,t.query,e.next=3,this.fetch("https://gist.githubusercontent.com/NileshSP/19bbe3945375eb10d625a980f0da93a1/raw/cc1de90d2ffe796efd6168f31b99178a650d91db/tokens.json",{method:"GET",mode:"cors"});case 3:return n=e.sent,e.next=6,n.json();case 6:return r=e.sent,"nileshsp",50,!1,"2019-01-01T00:00:00Z","\n        query ($user: String!, $items: Int!, $fork: Boolean!, $fromdate: DateTime!) {\n          getRequestRepos: user(login: $user) {\n            repositories(first: $items, isFork: $fork) {\n              nodes {\n                ...repository       \n              }\n            }\n            contributionsCollection(from: $fromdate ) {\n              issueContributions( first: $items, orderBy: { direction: DESC}) {\n                nodes {\n                  issue {\n                    title\n                    url\n                    createdAt\n                    closed\n                    repository {\n                      ...repository\n                    }\n                  }\n                }\n              }\n              pullRequestContributions( first: $items, excludeFirst:true, orderBy: { direction: DESC}) {\n                nodes {\n                  pullRequest {\n                    title\n                    url\n                    createdAt\n                    merged\n                    repository {\n                      ...repository\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        fragment repository on Repository {\n            id\n            name\n            nameWithOwner\n            url\n            description\n            createdAt\n            updatedAt\n            homepageUrl\n            languages(first: $items) {\n              nodes {\n                name\n              }\n            }\n            repositoryTopics(first: $items) {\n              nodes {\n                topic {\n                  name\n                }\n              }\n            }\n        }\n      ",e.abrupt("return",this.fetch("https://api.github.com/graphql",{method:"POST",headers:{"content-type":"application/json",Authorization:"bearer ".concat(r.githubAccessToken)},body:JSON.stringify({query:"\n        query ($user: String!, $items: Int!, $fork: Boolean!, $fromdate: DateTime!) {\n          getRequestRepos: user(login: $user) {\n            repositories(first: $items, isFork: $fork) {\n              nodes {\n                ...repository       \n              }\n            }\n            contributionsCollection(from: $fromdate ) {\n              issueContributions( first: $items, orderBy: { direction: DESC}) {\n                nodes {\n                  issue {\n                    title\n                    url\n                    createdAt\n                    closed\n                    repository {\n                      ...repository\n                    }\n                  }\n                }\n              }\n              pullRequestContributions( first: $items, excludeFirst:true, orderBy: { direction: DESC}) {\n                nodes {\n                  pullRequest {\n                    title\n                    url\n                    createdAt\n                    merged\n                    repository {\n                      ...repository\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        fragment repository on Repository {\n            id\n            name\n            nameWithOwner\n            url\n            description\n            createdAt\n            updatedAt\n            homepageUrl\n            languages(first: $items) {\n              nodes {\n                name\n              }\n            }\n            repositoryTopics(first: $items) {\n              nodes {\n                topic {\n                  name\n                }\n              }\n            }\n        }\n      ",variables:{user:"nileshsp",items:50,fork:false,fromdate:"2019-01-01T00:00:00Z"}}),mode:"cors"}).then((function(e){return e.json()})).then((function(e){var t=[];if(e.message)return console.error("github response",e.message),{preloadRepositories:t};if(null!=e){var n=function(e,t){return{contribution:e,id:t.id,name:t.name,nameWithOwner:t.nameWithOwner,url:t.url,description:t.description,createdat:t.createdAt,updatedat:t.updatedAt,demourl:null!==t.homepageUrl&&"null"!==t.homepageUrl.toString().trim()?t.homepageUrl:"",languages:t.languages.nodes.map((function(e){return e.name})),topics:t.repositoryTopics.nodes.map((function(e){return e.topic.name}))}};t=[].concat(E(t),E(e.data.getRequestRepos.repositories.nodes.map((function(e){return n({type:null,title:null,url:null,createdAt:null,state:null},e)}))),E(e.data.getRequestRepos.contributionsCollection.issueContributions.nodes.map((function(e){return n({type:"issue",title:e.issue.title,url:e.issue.url,createdAt:e.issue.createdAt,state:e.issue.closed},e.issue.repository)}))),E(e.data.getRequestRepos.contributionsCollection.pullRequestContributions.nodes.map((function(e){return n({type:"pull request",title:e.pullRequest.title,url:e.pullRequest.url,createdAt:e.pullRequest.createdAt,state:e.pullRequest.merged},e.pullRequest.repository)})))).sort((function(e,t){var n=new Date(e.contribution.createdAt||e.createdat);return new Date(t.contribution.createdAt||t.createdat)-n})).map((function(e,t){return S({},e,{index:t})}))}else console.log("Github API responded with irrelevant data : ",e);return{preloadRepositories:t}})).catch((function(e){console.error("Error is : ".concat(e))})));case 13:case"end":return e.stop()}}),e,this)})))).apply(this,arguments)}function H(e,t,n){var r=t.preloadRepositories;return e.$set=function(e){"preloadRepositories"in e&&n("preloadRepositories",r=e.preloadRepositories)},{preloadRepositories:r}}var J=function(e){function u(e){var t;return n(this,u),t=r(this,i(u).call(this)),o(s(t),e,H,_,a,["preloadRepositories"]),t}return t(u,c),u}();export default J;export{z as preload};
