import{I as e,a as t,b as n,c as r,d as i,e as o,f as s,g as a,h as c,z as u,q as l,k as d,i as p,x as f,o as m,l as h,m as v,n as g,r as b,J as R,K as y,s as A,y as $,L as D,M as j,N as w,O as E,u as C}from"./chunk.c2b0acb4.js";import{a as N,b as q}from"./chunk.691828a6.js";import{a as O,b as k}from"./chunk.a373765b.js";function S(t){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{},i=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(i=i.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),i.forEach(function(n){e(t,n,r[n])})}return t}function T(e,t,n){var r=Object.create(e);return r.item=t[n],r}function I(e){for(var t,n=e.repositories,r=[],i=0;i<n.length;i+=1)r[i]=U(T(e,n,i));return{c:function(){for(var e=0;e<r.length;e+=1)r[e].c();t=u()},l:function(e){for(var n=0;n<r.length;n+=1)r[n].l(e);t=u()},m:function(e,n){for(var i=0;i<r.length;i+=1)r[i].m(e,n);l(e,t,n)},p:function(e,i){if(e.getPositionClass||e.repositories||e.Date||e.getReadableDate||e.showYear){n=i.repositories;for(var o=0;o<n.length;o+=1){var s=T(i,n,o);r[o]?(r[o].p(e,s),r[o].i(1)):(r[o]=U(s),r[o].c(),r[o].i(1),r[o].m(t.parentNode,t))}for(;o<r.length;o+=1)r[o].d(1);r.length=n.length}},i:function(e){for(var t=0;t<n.length;t+=1)r[t].i()},o:A,d:function(e){D(r,e),e&&g(t)}}}function x(e){var t,n,r;return{c:function(){t=p("div"),this.h()},l:function(e){t=h(e,"DIV",{class:!0,"data-content":!0},!1),v(t).forEach(g),this.h()},h:function(){t.className="containerYear svelte-15jh4iv",t.dataset.content=n=new e.Date(e.item.contribution.createdAt||e.item.createdat).getFullYear()},m:function(e,n){l(e,t,n)},p:function(e,r){e.repositories&&n!==(n=new r.Date(r.item.contribution.createdAt||r.item.createdat).getFullYear())&&(t.dataset.content=n)},i:function(e){r||R(function(){(r=y(t,O,{y:-300,duration:_})).start()})},o:A,d:function(e){e&&g(t)}}}function P(e){var t,n,r,i=e.item.description;return{c:function(){t=p("p"),n=f("created project: "),r=f(i),this.h()},l:function(e){t=h(e,"P",{class:!0},!1);var o=v(t);n=m(o,"created project: "),r=m(o,i),o.forEach(g),this.h()},h:function(){t.className="svelte-15jh4iv"},m:function(e,i){l(e,t,i),b(t,n),b(t,r)},p:function(e,t){e.repositories&&i!==(i=t.item.description)&&$(r,i)},d:function(e){e&&g(t)}}}function Y(e){var t,n,r,i,o,s,a,c=e.item.contribution.type,u=e.item.contribution.title;return{c:function(){t=p("p"),n=f("contributed with "),r=f(c),i=f(": "),o=p("a"),s=f(u),this.h()},l:function(e){t=h(e,"P",{class:!0},!1);var a=v(t);n=m(a,"contributed with "),r=m(a,c),i=m(a,": "),o=h(a,"A",{rel:!0,href:!0,target:!0,class:!0},!1);var l=v(o);s=m(l,u),l.forEach(g),a.forEach(g),this.h()},h:function(){o.rel="noopener, preconnect",o.href=a=e.item.contribution.url,o.target="_blank",o.className="svelte-15jh4iv",t.className="svelte-15jh4iv"},m:function(e,a){l(e,t,a),b(t,n),b(t,r),b(t,i),b(t,o),b(o,s)},p:function(e,t){e.repositories&&c!==(c=t.item.contribution.type)&&$(r,c),e.repositories&&u!==(u=t.item.contribution.title)&&$(s,u),e.repositories&&a!==(a=t.item.contribution.url)&&(o.href=a)},d:function(e){e&&g(t)}}}function F(e){var t,n,r;return{c:function(){t=p("a"),n=f("demo"),this.h()},l:function(e){t=h(e,"A",{rel:!0,href:!0,target:!0,class:!0},!1);var r=v(t);n=m(r,"demo"),r.forEach(g),this.h()},h:function(){t.rel="noopener, preconnect",t.href=r=e.item.demourl,t.target="_blank",t.className="svelte-15jh4iv"},m:function(e,r){l(e,t,r),b(t,n)},p:function(e,n){e.repositories&&r!==(r=n.item.demourl)&&(t.href=r)},d:function(e){e&&g(t)}}}function U(e){var t,n,r,i,o,s,a,c,u,D,j,w,E,C,N,q,k,S,T,I,U,V,_,B=e.item.nameWithOwner,W=e.item.topics.concat(e.item.languages).join(", "),L=e.getReadableDate(e.item.contribution.createdAt||e.item.createdat),z=e.showYear(e.item.contribution.createdAt||e.item.createdat)&&x(e);function G(e){return e.item.contribution.type?Y:P}var H=G(e),J=H(e),Z=""!==e.item.demourl&&F(e);return{c:function(){z&&z.c(),t=d(),n=p("div"),r=p("div"),i=p("h3"),o=p("a"),s=f(B),c=d(),J.c(),u=d(),D=p("span"),j=f(W),w=d(),E=p("div"),C=p("div"),Z&&Z.c(),N=d(),q=p("div"),k=p("i"),S=f("initiated @ "),T=f(L),U=d(),this.h()},l:function(e){z&&z.l(e),t=m(e,"\n          "),n=h(e,"DIV",{class:!0,"data-content":!0},!1);var a=v(n);r=h(a,"DIV",{class:!0},!1);var l=v(r);i=h(l,"H3",{class:!0},!1);var d=v(i);o=h(d,"A",{rel:!0,href:!0,target:!0,class:!0},!1);var p=v(o);s=m(p,B),p.forEach(g),d.forEach(g),c=m(l,"\n              "),J.l(l),u=m(l,"  \n              "),D=h(l,"SPAN",{class:!0},!1);var f=v(D);j=m(f,W),f.forEach(g),w=m(l,"\n              "),E=h(l,"DIV",{class:!0},!1);var b=v(E);C=h(b,"DIV",{class:!0},!1);var R=v(C);Z&&Z.l(R),R.forEach(g),N=m(b,"\n                "),q=h(b,"DIV",{class:!0},!1);var y=v(q);k=h(y,"I",{class:!0},!1);var A=v(k);S=m(A,"initiated @ "),T=m(A,L),A.forEach(g),y.forEach(g),b.forEach(g),l.forEach(g),U=m(a,"\n          "),a.forEach(g),this.h()},h:function(){o.rel="noopener, preconnect",o.href=a=e.item.url,o.target="_blank",o.className="svelte-15jh4iv",i.className="svelte-15jh4iv",D.className="topics svelte-15jh4iv",C.className="svelte-15jh4iv",k.className="svelte-15jh4iv",q.className="svelte-15jh4iv",E.className="contentFooter svelte-15jh4iv",r.className="content  svelte-15jh4iv",n.className=V="container "+e.getPositionClass(e.item.index)+" svelte-15jh4iv",n.dataset.content=_=new e.Date(e.item.contribution.createdAt||e.item.createdat).toLocaleString("en-us",{month:"short"})},m:function(e,a){z&&z.m(e,a),l(e,t,a),l(e,n,a),b(n,r),b(r,i),b(i,o),b(o,s),b(r,c),J.m(r,null),b(r,u),b(r,D),b(D,j),b(r,w),b(r,E),b(E,C),Z&&Z.m(C,null),b(E,N),b(E,q),b(q,k),b(k,S),b(k,T),b(n,U)},p:function(e,i){i.showYear(i.item.contribution.createdAt||i.item.createdat)?z?(z.p(e,i),z.i(1)):((z=x(i)).c(),z.i(1),z.m(t.parentNode,t)):z&&(z.d(1),z=null),e.repositories&&B!==(B=i.item.nameWithOwner)&&$(s,B),e.repositories&&a!==(a=i.item.url)&&(o.href=a),H===(H=G(i))&&J?J.p(e,i):(J.d(1),(J=H(i))&&(J.c(),J.m(r,u))),e.repositories&&W!==(W=i.item.topics.concat(i.item.languages).join(", "))&&$(j,W),""!==i.item.demourl?Z?Z.p(e,i):((Z=F(i)).c(),Z.m(C,null)):Z&&(Z.d(1),Z=null),e.repositories&&L!==(L=i.getReadableDate(i.item.contribution.createdAt||i.item.createdat))&&$(T,L),e.repositories&&V!==(V="container "+i.getPositionClass(i.item.index)+" svelte-15jh4iv")&&(n.className=V),e.repositories&&_!==(_=new i.Date(i.item.contribution.createdAt||i.item.createdat).toLocaleString("en-us",{month:"short"}))&&(n.dataset.content=_)},i:function(t){z&&z.i(),I||R(function(){(I=y(r,O,e.getItemTransition(e.item.index))).start()})},o:A,d:function(e){z&&z.d(e),e&&(g(t),g(n)),J.d(),Z&&Z.d()}}}function V(e){var t,n,r,i,o,s,a,c,u,A=e.repositories.length>0&&I(e);return{c:function(){t=p("h2"),n=f("[...github repositories]"),o=d(),s=p("div"),a=p("div"),A&&A.c(),this.h()},l:function(e){t=h(e,"H2",{class:!0},!1);var r=v(t);n=m(r,"[...github repositories]"),r.forEach(g),o=m(e,"\n  "),s=h(e,"DIV",{class:!0},!1);var i=v(s);a=h(i,"DIV",{class:!0},!1);var c=v(a);A&&A.l(c),c.forEach(g),i.forEach(g),this.h()},h:function(){t.className="svelte-15jh4iv",a.className="timeline svelte-15jh4iv",s.className="main svelte-15jh4iv"},m:function(e,r){l(e,t,r),b(t,n),l(e,o,r),l(e,s,r),b(s,a),A&&A.m(a,null),u=!0},p:function(e,t){t.repositories.length>0?A?(A.p(e,t),A.i(1)):((A=I(t)).c(),A.i(1),A.m(a,null)):A&&(A.d(1),A=null)},i:function(e){u||(R(function(){i&&i.end(1),r||(r=y(t,O,{y:-100,duration:2e3})),r.start()}),A&&A.i(),c&&c.end(1),u=!0)},o:function(e){r&&r.invalidate(),e&&(i=j(t,k,{})),e&&(c=j(s,k,{})),u=!1},d:function(e){e&&(g(t),i&&i.end(),g(o),g(s)),A&&A.d(),e&&c&&c.end()}}}var _=2e3;function B(e,t,n){var r=t.repositories,i=void 0===r?{}:r,o=t.preloadRepositories,s=void 0===o?{}:o,a=null;w(function(){n("repositories",i=s)});var c=function(e){return e%2==0?"left":"right"};return e.$set=function(e){"repositories"in e&&n("repositories",i=e.repositories),"preloadRepositories"in e&&n("preloadRepositories",s=e.preloadRepositories)},{repositories:i,preloadRepositories:s,getReadableDate:function(e){var t=new Date(e);return"".concat(t.getDate()," ").concat(t.toLocaleString("en-us",{month:"short"})," ").concat(t.getFullYear())},getPositionClass:c,getItemTransition:function(e){return"left"===c(e)?{x:-100,duration:_}:{x:100,duration:_}},showYear:function(e){var t=new Date(e).getFullYear();return(null===a||a!==t)&&(n("repositoryYear",a=t),!0)},Date:Date}}var W=function(e){function u(e){var t;return n(this,u),t=r(this,i(u).call(this)),o(s(t),e,B,V,a,["repositories","preloadRepositories"]),t}return t(u,c),u}();function L(e){var t,n,r=new W({props:{preloadRepositories:e.preloadRepositories}});return{c:function(){t=d(),r.$$.fragment.c(),this.h()},l:function(e){t=m(e,"\n"),r.$$.fragment.l(e),this.h()},h:function(){document.title="Nilesh - Repositories"},m:function(e,i){l(e,t,i),C(r,e,i),n=!0},p:function(e,t){var n={};e.preloadRepositories&&(n.preloadRepositories=t.preloadRepositories),r.$set(n)},i:function(e){n||(r.$$.fragment.i(e),n=!0)},o:function(e){r.$$.fragment.o(e),n=!1},d:function(e){e&&g(t),r.$destroy(e)}}}function z(e){return G.apply(this,arguments)}function G(){return(G=N(q.mark(function e(t){var n,r;return q.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t.params,t.query,e.next=3,this.fetch("https://gist.githubusercontent.com/NileshSP/19bbe3945375eb10d625a980f0da93a1/raw/cc1de90d2ffe796efd6168f31b99178a650d91db/tokens.json",{method:"GET",mode:"cors"});case 3:return n=e.sent,e.next=6,n.json();case 6:return r=e.sent,"nileshsp",50,!1,"2019-01-01T00:00:00Z","\n        query ($user: String!, $items: Int!, $fork: Boolean!, $fromdate: DateTime!) {\n          getRequestRepos: user(login: $user) {\n            repositories(first: $items, isFork: $fork) {\n              nodes {\n                ...repository       \n              }\n            }\n            contributionsCollection(from: $fromdate ) {\n              issueContributions( first: $items, orderBy: { field : OCCURRED_AT, direction: DESC}) {\n                nodes {\n                  issue {\n                    title\n                    url\n                    createdAt\n                    closed\n                    repository {\n                      ...repository\n                    }\n                  }\n                }\n              }\n              pullRequestContributions( first: $items, excludeFirst:true, orderBy: { field : OCCURRED_AT, direction: DESC}) {\n                nodes {\n                  pullRequest {\n                    title\n                    url\n                    createdAt\n                    merged\n                    repository {\n                      ...repository\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        fragment repository on Repository {\n            id\n            name\n            nameWithOwner\n            url\n            description\n            createdAt\n            updatedAt\n            homepageUrl\n            languages(first: $items) {\n              nodes {\n                name\n              }\n            }\n            repositoryTopics(first: $items) {\n              nodes {\n                topic {\n                  name\n                }\n              }\n            }\n        }\n      ",e.abrupt("return",this.fetch("https://api.github.com/graphql",{method:"POST",headers:{"content-type":"application/json",Authorization:"bearer ".concat(r.githubAccessToken)},body:JSON.stringify({query:"\n        query ($user: String!, $items: Int!, $fork: Boolean!, $fromdate: DateTime!) {\n          getRequestRepos: user(login: $user) {\n            repositories(first: $items, isFork: $fork) {\n              nodes {\n                ...repository       \n              }\n            }\n            contributionsCollection(from: $fromdate ) {\n              issueContributions( first: $items, orderBy: { field : OCCURRED_AT, direction: DESC}) {\n                nodes {\n                  issue {\n                    title\n                    url\n                    createdAt\n                    closed\n                    repository {\n                      ...repository\n                    }\n                  }\n                }\n              }\n              pullRequestContributions( first: $items, excludeFirst:true, orderBy: { field : OCCURRED_AT, direction: DESC}) {\n                nodes {\n                  pullRequest {\n                    title\n                    url\n                    createdAt\n                    merged\n                    repository {\n                      ...repository\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        fragment repository on Repository {\n            id\n            name\n            nameWithOwner\n            url\n            description\n            createdAt\n            updatedAt\n            homepageUrl\n            languages(first: $items) {\n              nodes {\n                name\n              }\n            }\n            repositoryTopics(first: $items) {\n              nodes {\n                topic {\n                  name\n                }\n              }\n            }\n        }\n      ",variables:{user:"nileshsp",items:50,fork:!1,fromdate:"2019-01-01T00:00:00Z"}}),mode:"cors"}).then(function(e){return e.json()}).then(function(e){var t=[];if(e.message)return console.error("github response",e.message),{preloadRepositories:t};if(null!=e){var n=function(e,t){return{contribution:e,id:t.id,name:t.name,nameWithOwner:t.nameWithOwner,url:t.url,description:t.description,createdat:t.createdAt,updatedat:t.updatedAt,demourl:null!==t.homepageUrl&&"null"!==t.homepageUrl.toString().trim()?t.homepageUrl:"",languages:t.languages.nodes.map(function(e){return e.name}),topics:t.repositoryTopics.nodes.map(function(e){return e.topic.name})}};t=[].concat(E(t),E(e.data.getRequestRepos.repositories.nodes.map(function(e){return n({type:null,title:null,url:null,createdAt:null,state:null},e)})),E(e.data.getRequestRepos.contributionsCollection.issueContributions.nodes.map(function(e){return n({type:"issue",title:e.issue.title,url:e.issue.url,createdAt:e.issue.createdAt,state:e.issue.closed},e.issue.repository)})),E(e.data.getRequestRepos.contributionsCollection.pullRequestContributions.nodes.map(function(e){return n({type:"pull request",title:e.pullRequest.title,url:e.pullRequest.url,createdAt:e.pullRequest.createdAt,state:e.pullRequest.merged},e.pullRequest.repository)}))).sort(function(e,t){var n=new Date(e.contribution.createdAt||e.createdat);return new Date(t.contribution.createdAt||t.createdat)-n}).map(function(e,t){return S({},e,{index:t})})}else console.log("Github API responded with irrelevant data : ",e);return{preloadRepositories:t}}).catch(function(e){console.error("Error is : ".concat(e))}));case 13:case"end":return e.stop()}},e,this)}))).apply(this,arguments)}function H(e,t,n){var r=t.preloadRepositories;return e.$set=function(e){"preloadRepositories"in e&&n("preloadRepositories",r=e.preloadRepositories)},{preloadRepositories:r}}export default(function(e){function u(e){var t;return n(this,u),t=r(this,i(u).call(this)),o(s(t),e,H,L,a,["preloadRepositories"]),t}return t(u,c),u}());export{z as preload};
//# sourceMappingURL=repositories.8e05b354.js.map
